.MODEL SMALL            ; USING SMALL MEMORY MODEL
.STACK 100H             ; RESERVES 100H BYTES FOR STACK

.DATA
; HEADING AT THE START OF CODE
HEADING DB '*************** GUESSING GAME ***************$'

; OTHER MESSAGES TO BE DISPLAYED
M1 DB 'YOU HAVE TO GUESS A NUMBER FROM RANGE 0 TO 9.$'
M2 DB 'YOU WILL GET 3 CHANCES TO GUESS THE NUMBER.$'
M3 DB 'LETS PLAY$'

; MESSAGE WHEN USER INPUTS THE NUMBER
LINE DB 'GUESS THE NUMBER: $'

; MESSAGES TO BE DISPLAYED WHEN USER GUESSES THE NUMBER
RIGHTGUESS DB 'YOU GUESSED IT RIGHT.$'
WRONGGUESS DB 'WRONG GUESS.$'

; WHEN WE WANT USER TO TRY AGAIN
TRYAGAIN DB 'TRY AGIAN$'

; CONFIRMATION MESSAGE TO KNOW IF USER WANTS TO PLAY GAME AGAIN OR QUIT IT
AGAIN DB 'WANT TO PLAY AGAIN (Y FOR YES)? $'

; IF USER IS UNABLE TO GUESS THE NUMBER, THEN THIS MESSAGE IS DISPLAYED WITH RIGHT NUMBER
NUMBER DB 'NUMBER WAS $'

.CODE
MAIN PROC
    MOV AX, @DATA
    MOV DS, AX
    
    LEA DX, HEADING     ; PRINTING STRING STORED IN HEADING VARIABLE
    MOV AH, 9
    INT 21H
    CALL NEWLINE        ; CALLING NEWLINE PROCEDURE TO TAKE CURSOR TO START OF NEXT LINE
    CALL NEWLINE
    
    LEA DX, M1          ; IN ORDER TO PRINT STRING IN M1 VARIABLE
    MOV AH, 9
    INT 21H
    CALL NEWLINE
    
    LEA DX, M2          ; IN ORDER TO PRINT STRING IN M2 VARIABLE
    MOV AH, 9
    INT 21H
    CALL NEWLINE
    
    LEA DX, M3          ; IN ORDER TO PRINT STRING IN M3 VARIABLE
    MOV AH, 9
    INT 21H
    CALL NEWLINE
    CALL NEWLINE
    
    REPEAT:
    ; GENERATING RANDOM NUMBER
    MOV AH, 2CH                 ; USING SYSTEM TIME
    INT 21H
    MOV AL,DL
    MOV AH,0
    MOV CL,20
    DIV CL
    MOV BL, AL
    INC BL
    
    ; NOW BL HOLDS THE RANDOM NUMBER
    
    CALL NEWLINE
    
    ; AS WE WILL GIVE USER 3 CHANCES SO WE RUN THE LOOP 3 TIMES
    MOV CX, 3
    L1:                         ; START OF L1 LOOP
        LEA DX, LINE
        MOV AH, 9
        INT 21H
        
        ; TAKING INPUT FROM THE USER
        MOV AH, 1
        INT 21H
        
        ; SUBTRACTING 48 (ASCII CODE OF 0) FROM INPUT SO WE CAN COMPARE IT WITH RANDOM NUMBER
        SUB AL, 48
        
        ; COMPARING USER'S GUESS AND THE RANDOM NUMBER GENERATED
        CMP BL, AL
        JE RIGHT                ; JUMP TO RIGHT IF USER'S GUESS WAS CORRECT
        
        CALL NEWLINE
        LEA DX, WRONGGUESS      ; IF USER'S GUESS IS WRONG THEN PRINT STRING IN WRONGGUESS VARIABLE
        MOV AH, 9
        INT 21H
        LEA DX, TRYAGAIN        ; IN ORDER TO PRINT TRY AGAIN ON SCREEN
        MOV AH, 9
        INT 21H
        
        CALL NEWLINE
    LOOP L1                     ; END OF L1 LOOP 
    
    ; IF USER COULDN'T GUESS THE NUMBER, THEN DISPALY THE NUMBER THAT WAS GENERATED
    LEA DX, NUMBER              
    MOV AH, 9
    INT 21H
    MOV DL, BL                  ; MOVING RANDOM NUMBER TO DL TO PRINT IT
    ADD DL, 48
    MOV AH, 2
    INT 21H
    
    JMP WANNA                   ; JUMP TO WANNA, IN ORDER TO ASK USER IF HE/SHE WANTS TO PLAY AGAIN
    
    RIGHT:
        CALL NEWLINE
        LEA DX, RIGHTGUESS      ; PRINT STRING IN RIGHTGUESS VARIABLE, IF HE GUESSES IT RIGHT
        MOV AH, 9
        INT 21H
        
    WANNA:
        CALL NEWLINE
        CALL NEWLINE
        LEA DX, AGAIN           ; PRINTING STRING IN AGAIN VARIABLE
        MOV AH, 9
        INT 21H
        
        MOV AH, 1               ; TAKING INPUT FROM USER Y FOR YES
        INT 21H
        
        CMP AL, 89              ; COMPARING USER INPUT WITH 89 (ASCII CODE OF Y)
        JE REPEAT     
    
MAIN ENDP
    
NEWLINE PROC
    MOV DL, 10                  ; AS 10 IS ASCII CODE OF NEXT LINE
    MOV AH, 2
    INT 21H
    MOV DL, 13                  ; CARRIAGE RETURN (TAKE CURSOR TO START OF CURRENT LINE)
    MOV AH, 2
    INT 21H
    
    RET    
NEWLINE ENDP